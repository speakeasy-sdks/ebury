/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ebury.ebury.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * Payment - The client payment
 */

public class Payment {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_number")
    public String accountNumber;

    public Payment withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * Payment amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Float amount;

    public Payment withAmount(Float amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The authorisation workflow of the payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorisation_workflow")
    public PaymentAuthorisationWorkflow authorisationWorkflow;

    public Payment withAuthorisationWorkflow(PaymentAuthorisationWorkflow authorisationWorkflow) {
        this.authorisationWorkflow = authorisationWorkflow;
        return this;
    }
    
    /**
     * The user who authorised the payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorised_by")
    public String authorisedBy;

    public Payment withAuthorisedBy(String authorisedBy) {
        this.authorisedBy = authorisedBy;
        return this;
    }
    
    /**
     * The date when payment was authorised
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("authorised_date")
    public LocalDate authorisedDate;

    public Payment withAuthorisedDate(LocalDate authorisedDate) {
        this.authorisedDate = authorisedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bank_identifier")
    public String bankIdentifier;

    public Payment withBankIdentifier(String bankIdentifier) {
        this.bankIdentifier = bankIdentifier;
        return this;
    }
    
    /**
     * Name of the beneficiary
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beneficiary_name")
    public String beneficiaryName;

    public Payment withBeneficiaryName(String beneficiaryName) {
        this.beneficiaryName = beneficiaryName;
        return this;
    }
    
    /**
     * The user who cancelled the payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelled_by")
    public String cancelledBy;

    public Payment withCancelledBy(String cancelledBy) {
        this.cancelledBy = cancelledBy;
        return this;
    }
    
    /**
     * The date when payment was cancelled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("cancelled_date")
    public LocalDate cancelledDate;

    public Payment withCancelledDate(LocalDate cancelledDate) {
        this.cancelledDate = cancelledDate;
        return this;
    }
    
    /**
     * Unique identifier of the contact who booked the payment
     */
    @JsonProperty("contact_id")
    public String contactId;

    public Payment withContactId(String contactId) {
        this.contactId = contactId;
        return this;
    }
    
    /**
     * Payment instruction created date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("created_date")
    public LocalDate createdDate;

    public Payment withCreatedDate(LocalDate createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * Fee amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fee_amount")
    public Float feeAmount;

    public Payment withFeeAmount(Float feeAmount) {
        this.feeAmount = feeAmount;
        return this;
    }
    
    /**
     * Fee currency
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fee_currency")
    public String feeCurrency;

    public Payment withFeeCurrency(String feeCurrency) {
        this.feeCurrency = feeCurrency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    public String iban;

    public Payment withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     * Whether or not the payment requires an invoice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoice_required")
    public Boolean invoiceRequired;

    public Payment withInvoiceRequired(Boolean invoiceRequired) {
        this.invoiceRequired = invoiceRequired;
        return this;
    }
    
    /**
     * Currency the payment was made in
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_currency")
    public String paymentCurrency;

    public Payment withPaymentCurrency(String paymentCurrency) {
        this.paymentCurrency = paymentCurrency;
        return this;
    }
    
    /**
     * Target payment date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("payment_date")
    public LocalDate paymentDate;

    public Payment withPaymentDate(LocalDate paymentDate) {
        this.paymentDate = paymentDate;
        return this;
    }
    
    /**
     * Unique identifier for the payment
     */
    @JsonProperty("payment_id")
    public String paymentId;

    public Payment withPaymentId(String paymentId) {
        this.paymentId = paymentId;
        return this;
    }
    
    /**
     * URI to download payment instruction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_instruction")
    public String paymentInstruction;

    public Payment withPaymentInstruction(String paymentInstruction) {
        this.paymentInstruction = paymentInstruction;
        return this;
    }
    
    /**
     * URI to download payment receipt
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_receipt")
    public String paymentReceipt;

    public Payment withPaymentReceipt(String paymentReceipt) {
        this.paymentReceipt = paymentReceipt;
        return this;
    }
    
    /**
     * Payment reference
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public Payment withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The user who rejected the payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rejected_by")
    public String rejectedBy;

    public Payment withRejectedBy(String rejectedBy) {
        this.rejectedBy = rejectedBy;
        return this;
    }
    
    /**
     * The date when payment was rejected
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("rejected_date")
    public LocalDate rejectedDate;

    public Payment withRejectedDate(LocalDate rejectedDate) {
        this.rejectedDate = rejectedDate;
        return this;
    }
    
    /**
     * The current status of the payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PaymentStatus status;

    public Payment withStatus(PaymentStatus status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("swift_code")
    public String swiftCode;

    public Payment withSwiftCode(String swiftCode) {
        this.swiftCode = swiftCode;
        return this;
    }
    
    /**
     * Unique identifier of the trade the payment is allocated to
     */
    @JsonProperty("trade_id")
    public String tradeId;

    public Payment withTradeId(String tradeId) {
        this.tradeId = tradeId;
        return this;
    }
    
    public Payment(@JsonProperty("contact_id") String contactId, @JsonProperty("payment_id") String paymentId, @JsonProperty("trade_id") String tradeId) {
        this.contactId = contactId;
        this.paymentId = paymentId;
        this.tradeId = tradeId;
  }
}
