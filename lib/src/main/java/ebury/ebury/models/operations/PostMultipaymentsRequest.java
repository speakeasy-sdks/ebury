/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ebury.ebury.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import ebury.ebury.utils.SpeakeasyMetadata;


public class PostMultipaymentsRequest {
    /**
     * Request Payload
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    public ebury.ebury.models.shared.NewMultiPaymentItem[] requestBody;

    public PostMultipaymentsRequest withRequestBody(ebury.ebury.models.shared.NewMultiPaymentItem[] requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    /**
     * The ID of the contact
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Contact-ID")
    public String xContactID;

    public PostMultipaymentsRequest withXContactID(String xContactID) {
        this.xContactID = xContactID;
        return this;
    }
    
    /**
     * Set to true. Accept quote immediately, do not require confirmation
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=accept_immediately")
    public Boolean acceptImmediately;

    public PostMultipaymentsRequest withAcceptImmediately(Boolean acceptImmediately) {
        this.acceptImmediately = acceptImmediately;
        return this;
    }
    
    /**
     * Accept a partially successful instruction. If true, send successful instructions for payment. If false, reject the entire instruction
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=accept_partial")
    public Boolean acceptPartial;

    public PostMultipaymentsRequest withAcceptPartial(Boolean acceptPartial) {
        this.acceptPartial = acceptPartial;
        return this;
    }
    
    /**
     * The ID of the client
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=client_id")
    public String clientId;

    public PostMultipaymentsRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * If trade_id omitted, a sell currency must be supplied
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sell_currency")
    public String sellCurrency;

    public PostMultipaymentsRequest withSellCurrency(String sellCurrency) {
        this.sellCurrency = sellCurrency;
        return this;
    }
    
    /**
     * Trade ID to book payments against. Omit if trade should be executed to fund payments
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=trade_id")
    public String tradeId;

    public PostMultipaymentsRequest withTradeId(String tradeId) {
        this.tradeId = tradeId;
        return this;
    }
    
    public PostMultipaymentsRequest(@JsonProperty("RequestBody") ebury.ebury.models.shared.NewMultiPaymentItem[] requestBody, @JsonProperty("accept_immediately") Boolean acceptImmediately, @JsonProperty("client_id") String clientId) {
        this.requestBody = requestBody;
        this.acceptImmediately = acceptImmediately;
        this.clientId = clientId;
  }
}
