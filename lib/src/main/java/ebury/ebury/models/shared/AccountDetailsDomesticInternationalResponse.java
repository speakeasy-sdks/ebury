/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ebury.ebury.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountDetailsDomesticInternationalResponse - Account details updated
 */

public class AccountDetailsDomesticInternationalResponse {
    /**
     * Unique ID of the account details
     */
    @JsonProperty("account_details_id")
    public String accountDetailsId;

    public AccountDetailsDomesticInternationalResponse withAccountDetailsId(String accountDetailsId) {
        this.accountDetailsId = accountDetailsId;
        return this;
    }
    
    /**
     * Type of account details
     */
    @JsonProperty("account_details_type")
    public AccountDetailsDomesticInternationalResponseAccountDetailsType accountDetailsType;

    public AccountDetailsDomesticInternationalResponse withAccountDetailsType(AccountDetailsDomesticInternationalResponseAccountDetailsType accountDetailsType) {
        this.accountDetailsType = accountDetailsType;
        return this;
    }
    
    /**
     * Address of the holder of the account details
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_holder_address")
    public String accountHolderAddress;

    public AccountDetailsDomesticInternationalResponse withAccountHolderAddress(String accountHolderAddress) {
        this.accountHolderAddress = accountHolderAddress;
        return this;
    }
    
    /**
     * Name of the holder of the account details
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_holder_name")
    public String accountHolderName;

    public AccountDetailsDomesticInternationalResponse withAccountHolderName(String accountHolderName) {
        this.accountHolderName = accountHolderName;
        return this;
    }
    
    /**
     * Unique ID of the account these details belong to.
     * Can be null for pooled accounts.
     */
    @JsonProperty("account_id")
    public String accountId;

    public AccountDetailsDomesticInternationalResponse withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * User-friendly alias for the account details.
     * Only present (and mandatory) for dedicated accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alias")
    public String alias;

    public AccountDetailsDomesticInternationalResponse withAlias(String alias) {
        this.alias = alias;
        return this;
    }
    
    /**
     * Country of the account details (ISO Code 2)
     */
    @JsonProperty("country")
    public String country;

    public AccountDetailsDomesticInternationalResponse withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Datetime of creation. Only on dedicated account details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created")
    public String created;

    public AccountDetailsDomesticInternationalResponse withCreated(String created) {
        this.created = created;
        return this;
    }
    
    /**
     * Currency of the account details
     */
    @JsonProperty("currency")
    public String currency;

    public AccountDetailsDomesticInternationalResponse withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Domestic information of the account
     */
    @JsonProperty("domestic")
    public AccountDetailsDomesticInternationalResponseDomestic domestic;

    public AccountDetailsDomesticInternationalResponse withDomestic(AccountDetailsDomesticInternationalResponseDomestic domestic) {
        this.domestic = domestic;
        return this;
    }
    
    /**
     * Address of the underlying financial institution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("financial_institution_address")
    public String financialInstitutionAddress;

    public AccountDetailsDomesticInternationalResponse withFinancialInstitutionAddress(String financialInstitutionAddress) {
        this.financialInstitutionAddress = financialInstitutionAddress;
        return this;
    }
    
    /**
     * Name of the underlying financial institution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("financial_institution_name")
    public String financialInstitutionName;

    public AccountDetailsDomesticInternationalResponse withFinancialInstitutionName(String financialInstitutionName) {
        this.financialInstitutionName = financialInstitutionName;
        return this;
    }
    
    /**
     * International information of the account
     */
    @JsonProperty("international")
    public AccountDetailsDomesticInternationalResponseInternational international;

    public AccountDetailsDomesticInternationalResponse withInternational(AccountDetailsDomesticInternationalResponseInternational international) {
        this.international = international;
        return this;
    }
    
    /**
     * Datetime of last modification. Only on dedicated account details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modified")
    public String modified;

    public AccountDetailsDomesticInternationalResponse withModified(String modified) {
        this.modified = modified;
        return this;
    }
    
    /**
     * Primary (default) account.
     * Only present (and mandatory) for dedicated accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primary")
    public Boolean primary;

    public AccountDetailsDomesticInternationalResponse withPrimary(Boolean primary) {
        this.primary = primary;
        return this;
    }
    
    /**
     * Status of the account details
     */
    @JsonProperty("status")
    public AccountDetailsDomesticInternationalResponseStatus status;

    public AccountDetailsDomesticInternationalResponse withStatus(AccountDetailsDomesticInternationalResponseStatus status) {
        this.status = status;
        return this;
    }
    
    public AccountDetailsDomesticInternationalResponse(@JsonProperty("account_details_id") String accountDetailsId, @JsonProperty("account_details_type") AccountDetailsDomesticInternationalResponseAccountDetailsType accountDetailsType, @JsonProperty("account_id") String accountId, @JsonProperty("country") String country, @JsonProperty("currency") String currency, @JsonProperty("domestic") AccountDetailsDomesticInternationalResponseDomestic domestic, @JsonProperty("international") AccountDetailsDomesticInternationalResponseInternational international, @JsonProperty("status") AccountDetailsDomesticInternationalResponseStatus status) {
        this.accountDetailsId = accountDetailsId;
        this.accountDetailsType = accountDetailsType;
        this.accountId = accountId;
        this.country = country;
        this.currency = currency;
        this.domestic = domestic;
        this.international = international;
        this.status = status;
  }
}
