/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ebury.ebury.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import ebury.ebury.utils.SpeakeasyMetadata;


public class GetAccountsAccountIdTransactionsRequest {
    /**
     * The ID of the contact
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Contact-ID")
    public String xContactID;

    public GetAccountsAccountIdTransactionsRequest withXContactID(String xContactID) {
        this.xContactID = xContactID;
        return this;
    }
    
    /**
     * The UUID of the account
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=account_id")
    public String accountId;

    public GetAccountsAccountIdTransactionsRequest withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The ID of the client
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=client_id")
    public String clientId;

    public GetAccountsAccountIdTransactionsRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Filter transactions by debit/credit type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=credit_debit_indicator")
    public GetAccountsAccountIdTransactionsCreditDebitIndicator creditDebitIndicator;

    public GetAccountsAccountIdTransactionsRequest withCreditDebitIndicator(GetAccountsAccountIdTransactionsCreditDebitIndicator creditDebitIndicator) {
        this.creditDebitIndicator = creditDebitIndicator;
        return this;
    }
    
    /**
     * Only return transactions with value date and time after this UTC date and time. YYYY-MM-DDThh:mm format
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from_value_datetime")
    public String fromValueDatetime;

    public GetAccountsAccountIdTransactionsRequest withFromValueDatetime(String fromValueDatetime) {
        this.fromValueDatetime = fromValueDatetime;
        return this;
    }
    
    /**
     * The desired page number for pagination
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;

    public GetAccountsAccountIdTransactionsRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of items per page for pagination
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_size")
    public Long pageSize;

    public GetAccountsAccountIdTransactionsRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Only return transactions with value date and time before this UTC date and time. YYYY-MM-DDThh:mm format
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=to_value_datetime")
    public String toValueDatetime;

    public GetAccountsAccountIdTransactionsRequest withToValueDatetime(String toValueDatetime) {
        this.toValueDatetime = toValueDatetime;
        return this;
    }
    
    /**
     * Only return transactions of the specified transaction type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=transaction_type")
    public ebury.ebury.models.shared.TransactionTypeFilter transactionType;

    public GetAccountsAccountIdTransactionsRequest withTransactionType(ebury.ebury.models.shared.TransactionTypeFilter transactionType) {
        this.transactionType = transactionType;
        return this;
    }
    
    public GetAccountsAccountIdTransactionsRequest(@JsonProperty("account_id") String accountId, @JsonProperty("client_id") String clientId) {
        this.accountId = accountId;
        this.clientId = clientId;
  }
}
