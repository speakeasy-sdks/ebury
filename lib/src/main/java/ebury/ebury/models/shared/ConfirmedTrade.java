/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ebury.ebury.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * ConfirmedTrade - Trade created
 */

public class ConfirmedTrade {
    /**
     * An existing bank account
     */
    @JsonProperty("bank_account")
    public ConfirmedTradeBankAccount bankAccount;

    public ConfirmedTrade withBankAccount(ConfirmedTradeBankAccount bankAccount) {
        this.bankAccount = bankAccount;
        return this;
    }
    
    /**
     * Only for forwards. Trade's deposit amount.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initial_margin_amount")
    public Double initialMarginAmount;

    public ConfirmedTrade withInitialMarginAmount(Double initialMarginAmount) {
        this.initialMarginAmount = initialMarginAmount;
        return this;
    }
    
    /**
     * Only for forwards. Date on or before which deposit must be received by Ebury. Date and time are in UTC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("initial_margin_due_date")
    public LocalDate initialMarginDueDate;

    public ConfirmedTrade withInitialMarginDueDate(LocalDate initialMarginDueDate) {
        this.initialMarginDueDate = initialMarginDueDate;
        return this;
    }
    
    /**
     * Limit date and time (UTC) in which funds must be received by Ebury
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("maturity_date")
    public LocalDate maturityDate;

    public ConfirmedTrade withMaturityDate(LocalDate maturityDate) {
        this.maturityDate = maturityDate;
        return this;
    }
    
    /**
     * Trade identifier
     */
    @JsonProperty("trade_id")
    public String tradeId;

    public ConfirmedTrade withTradeId(String tradeId) {
        this.tradeId = tradeId;
        return this;
    }
    
    public ConfirmedTrade(@JsonProperty("bank_account") ConfirmedTradeBankAccount bankAccount, @JsonProperty("maturity_date") LocalDate maturityDate, @JsonProperty("trade_id") String tradeId) {
        this.bankAccount = bankAccount;
        this.maturityDate = maturityDate;
        this.tradeId = tradeId;
  }
}
