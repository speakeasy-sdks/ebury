/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ebury.ebury.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import ebury.ebury.utils.SpeakeasyMetadata;


public class GetTradesRequest {
    /**
     * The ID of the contact
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Contact-ID")
    public String xContactID;

    public GetTradesRequest withXContactID(String xContactID) {
        this.xContactID = xContactID;
        return this;
    }
    
    /**
     * Filter by the buy currency
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=buy_currency")
    public String buyCurrency;

    public GetTradesRequest withBuyCurrency(String buyCurrency) {
        this.buyCurrency = buyCurrency;
        return this;
    }
    
    /**
     * The ID of the client
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=client_id")
    public String clientId;

    public GetTradesRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Filter by the API external reference id
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=external_reference_id")
    public String externalReferenceId;

    public GetTradesRequest withExternalReferenceId(String externalReferenceId) {
        this.externalReferenceId = externalReferenceId;
        return this;
    }
    
    /**
     * Filter by related mass payment's external reference.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=mass_payment_external_reference_id")
    public String massPaymentExternalReferenceId;

    public GetTradesRequest withMassPaymentExternalReferenceId(String massPaymentExternalReferenceId) {
        this.massPaymentExternalReferenceId = massPaymentExternalReferenceId;
        return this;
    }
    
    /**
     * Filter by related mass payment's uuid.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=mass_payment_id")
    public String massPaymentId;

    public GetTradesRequest withMassPaymentId(String massPaymentId) {
        this.massPaymentId = massPaymentId;
        return this;
    }
    
    /**
     * The desired page number for pagination. By default is 1.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Integer page;

    public GetTradesRequest withPage(Integer page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of items per page for pagination. By default is 50.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_size")
    public Integer pageSize;

    public GetTradesRequest withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Parent identifier for drawdown trades
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=parent_trade_id")
    public String parentTradeId;

    public GetTradesRequest withParentTradeId(String parentTradeId) {
        this.parentTradeId = parentTradeId;
        return this;
    }
    
    /**
     * Filter trades by comma separated statuses
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public GetTradesStatus[] status;

    public GetTradesRequest withStatus(GetTradesStatus[] status) {
        this.status = status;
        return this;
    }
    
    /**
     * The trade type. The list will be filtered to include only trades with a matching trade type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=trade_type")
    public GetTradesTradeType[] tradeType;

    public GetTradesRequest withTradeType(GetTradesTradeType[] tradeType) {
        this.tradeType = tradeType;
        return this;
    }
    
    public GetTradesRequest(@JsonProperty("client_id") String clientId) {
        this.clientId = clientId;
  }
}
