/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ebury.ebury.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * EstimateOrQuoteResponse - Estimated rates response
 */

public class EstimateOrQuoteResponse {
    /**
     * Call this endpoint to book the trade (refer to Trades documentation for required payload)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("book_trade")
    public String bookTrade;

    public EstimateOrQuoteResponse withBookTrade(String bookTrade) {
        this.bookTrade = bookTrade;
        return this;
    }
    
    /**
     * Buy amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buy_amount")
    public Double buyAmount;

    public EstimateOrQuoteResponse withBuyAmount(Double buyAmount) {
        this.buyAmount = buyAmount;
        return this;
    }
    
    /**
     * Buy currency
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buy_currency")
    public String buyCurrency;

    public EstimateOrQuoteResponse withBuyCurrency(String buyCurrency) {
        this.buyCurrency = buyCurrency;
        return this;
    }
    
    /**
     * The estimated rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimated_rate")
    public Double estimatedRate;

    public EstimateOrQuoteResponse withEstimatedRate(Double estimatedRate) {
        this.estimatedRate = estimatedRate;
        return this;
    }
    
    /**
     * The symbol of estimated rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimated_rate_symbol")
    public String estimatedRateSymbol;

    public EstimateOrQuoteResponse withEstimatedRateSymbol(String estimatedRateSymbol) {
        this.estimatedRateSymbol = estimatedRateSymbol;
        return this;
    }
    
    /**
     * Fee amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fee_amount")
    public Float feeAmount;

    public EstimateOrQuoteResponse withFeeAmount(Float feeAmount) {
        this.feeAmount = feeAmount;
        return this;
    }
    
    /**
     * Fee currency
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fee_currency")
    public String feeCurrency;

    public EstimateOrQuoteResponse withFeeCurrency(String feeCurrency) {
        this.feeCurrency = feeCurrency;
        return this;
    }
    
    /**
     * The inverse rate
     */
    @JsonProperty("inverse_rate")
    public Double inverseRate;

    public EstimateOrQuoteResponse withInverseRate(Double inverseRate) {
        this.inverseRate = inverseRate;
        return this;
    }
    
    /**
     * The symbol of inverse rate
     */
    @JsonProperty("inverse_rate_symbol")
    public String inverseRateSymbol;

    public EstimateOrQuoteResponse withInverseRateSymbol(String inverseRateSymbol) {
        this.inverseRateSymbol = inverseRateSymbol;
        return this;
    }
    
    /**
     * Quote identifier. Used to create book a trade at the Trades endpoint
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quote_id")
    public String quoteId;

    public EstimateOrQuoteResponse withQuoteId(String quoteId) {
        this.quoteId = quoteId;
        return this;
    }
    
    /**
     * The rate quoted
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quoted_rate")
    public Double quotedRate;

    public EstimateOrQuoteResponse withQuotedRate(Double quotedRate) {
        this.quotedRate = quotedRate;
        return this;
    }
    
    /**
     * The symbol of rate quoted
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quoted_rate_symbol")
    public String quotedRateSymbol;

    public EstimateOrQuoteResponse withQuotedRateSymbol(String quotedRateSymbol) {
        this.quotedRateSymbol = quotedRateSymbol;
        return this;
    }
    
    /**
     * Sell amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell_amount")
    public Double sellAmount;

    public EstimateOrQuoteResponse withSellAmount(Double sellAmount) {
        this.sellAmount = sellAmount;
        return this;
    }
    
    /**
     * Sell currency
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell_currency")
    public String sellCurrency;

    public EstimateOrQuoteResponse withSellCurrency(String sellCurrency) {
        this.sellCurrency = sellCurrency;
        return this;
    }
    
    /**
     * Date on which quote is requested
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("value_date")
    public LocalDate valueDate;

    public EstimateOrQuoteResponse withValueDate(LocalDate valueDate) {
        this.valueDate = valueDate;
        return this;
    }
    
    /**
     * A warning is only returned if the requested value date was not valid and the next available date has been returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warning")
    public String warning;

    public EstimateOrQuoteResponse withWarning(String warning) {
        this.warning = warning;
        return this;
    }
    
    public EstimateOrQuoteResponse(@JsonProperty("inverse_rate") Double inverseRate, @JsonProperty("inverse_rate_symbol") String inverseRateSymbol, @JsonProperty("value_date") LocalDate valueDate) {
        this.inverseRate = inverseRate;
        this.inverseRateSymbol = inverseRateSymbol;
        this.valueDate = valueDate;
  }
}
